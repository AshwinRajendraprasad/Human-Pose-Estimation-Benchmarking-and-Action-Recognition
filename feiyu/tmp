  
x_body_joints_xy = ProcFtr.retrain_only_body_joints(x[i,:])
x_body_joints_xy = ProcFtr.normalize(x_body_joints_xy)

   def retrain_only_body_joints(x_input):
        x0 = x_input.copy()
        x0 = x0[2:2+13*2]
        return x0

    def normalize(x_input):
        lx = []
        ly = []
        N = len(x_input)
        i = 0
        while i<N:
            lx.append(x_input[i])
            ly.append(x_input[i+1])
            i+=2
        lx = np.array(lx)
        ly = np.array(ly)
        lx -= np.mean(lx)
        ly -= np.mean(ly)

        dlx = np.max(lx) - np.min(lx)
        lx /= 1 if dlx==0 else dlx

        dly = np.max(ly) - np.min(ly)
        ly /= 1 if dly==0 else dly
        
        # save it back to x
        x_new = []
        for i in range(int(N/2)):
            x_new.append(lx[i])
            x_new.append(ly[i])
        return x_new